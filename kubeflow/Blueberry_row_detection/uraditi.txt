struktuirati github: Trening + test - svi njihovi kodovi
standardizovati nazive dokera na engleskom

#u docs fajlu
lokaciju do dokera
lokaciju do kodova



#dodati putanje ka minio iz download i upload


#Razdvojiti postprocessing na dve komponente - analiza i upload - uraditi sve potrebne komponente


PRIORITETI:
srediti docker image-e i linkove
razdvojiti komponente i srediti putanje izmedju



5.2.2022

Trenutno stanje, na Flexi githubu se nalazi nekoliko package koje mozemo da koristimo, jedan je kubeflow_test i on je testiran na podacima iz baba. Drug je belanovica_test i to su nazivi image koje build-ujemo, tagujemo i pushujemo. Poslednji je koriscen na podacima iz belanovice i test_pipeline kod je prilagodjen tim podacima. Treba voditi racuna i vratiti naziv ovog package kad oce da se menjaju image i taj naziv se menja u download_model.yaml. linija 14 image: ghcr.io/flexigrobots-h2020/test_download_component:latest

Pokretanje pipeline u principu ne zahteva mnogo mucenja. Poenta je da se prvo promeni kod od kog se pravi image. Da bi napravio image pokrenem doker i u folderu u kom zelim da napravim docker image i u kom se nalazi docker file desnim klikom otvorim git bash na toj putanji. Zatim pozovem komande docker build, docker tag i docker push respektivno. Time se kreira image, taguje se odgovarajuca lokacija za dati image na githubu i pushuje. Nakon toga otvara se kubeflow u kom vec imam napravljen notebook. Otvorim notebook u njemu ne menjam nista za sad. Menjam samo ako sam recimo promenio putanje u kodu pa zelim da promenim iz kog backet-a na minio-u zelim da download-ujem podatke. Sledeci korak je da se u notebook-u pokrenu celije kako bi se kreirao pipeline specificnog naziva. Prelazim u kubeflow u odeljak pipelines i poslednji koji je kreiran i koji odgovara specificnom nazivu, klikom na njega otvaramo ga i idemo na create run.  Od ranije imamo definisan moj experiment i njega biram pod experiment, pritisnem start i ponovo udjem u taj run koji je poceo da se izvrsava. Nakon toga cekam logove i pratim sta se desava. Ako se sve izvrsi bez greske, u okviru grafa - flow chart-a ce biti iscrtani zeleni check-ovi. U okviru backeta test-results bi trebalo da su kreirani rezultati test pipeline-a. Gotova procedura.

Trenutno kod nad belanovica podacima ne radi. Sledeci korak je da ga istestiram na milevi da vidim sta moze biti problem. 